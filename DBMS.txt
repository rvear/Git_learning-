DBMS:

->Basic introduction : 2 tier , 3 tier, 3 level abstraction
		     : Data independence: network, heirarchial, *relational, *ER,object oriented
->E-R Model
->Basics of keys
->Normalization
->transaction control and concurrency
->SQL and relational algebra

* Database- it is a collection of related data .

 database->structured->RDBMS
 database->unstructured->webpages


* File system vs DBMS

 1) Attributes
 2) Concurrency
 3) Security
 4) Redundancy

* Schema- logical representation of database.

* Three Schema architecture : 1) view level
			    2) Logical level
			    3) (Internal)physical level	
the main goal of three Schema architecture is to achieve data independence from user .

* Integrity constrainsts- 1)Domain constraints
			  2) entity integrity 
			  3) referential integrity
			  4) key constraints

* Use of key ?- uniquely identify any tuple in a relation.
* what is key ?- Attribute

* Candidate key- primary key is chosen from the set of candidate key . The set of key which are       not chosen from the candidate key are called alternative key.
 
* Primary key{Unique + Not Null}
 
* Foreign key- It is an attribute or set attributes that reference to primary key of same table or another table(relation)
-> maintains referential integrity .

 ----->	Referenced table              ----->Referencing table
1) Insert - No violation               1) Insert- May cause violation
2) delete- May cause violation         2) delete- No violation
	  *On delete Cascade           3) update- May cause violation
	   On delete Set Null
	   On delete NO action
3)update- May cause violation

* Super key- Super key is a combination of all possible attributes which can uniquely identify two tuples in a table

* E-R Relationship Model(E-R Model)
-> Types of attributes
1) single vs multivalued attributes
2) simple vs composite attributes
3) stored vs derived attributes
4) *key vs Non key attributes
5) Required vs optional attributes
6) complex attributes- composite + multivalued

-> Types of Relationship 
1) One to One   ##attribute of relationship relation is called descriptive attribute .
2) One to many  ## the many side foreign key will become primary key.(Many side will reduced)
3) many to many ## composite attribute will become primary key .(No reduction of table)

* Normalization - it is a technique to remove or reduce redundancy from a table 
 ->Row level duplicate : primary key 
 ->column level duplicate:

-> First Normal Form : Table should not contain any multivalued attribute.

->trivial is always a functional dependency . y is subset of x ,union should not be phi.
--> Reflexivity
--> Augmentation
--> Transitive
--> Union
--> Decomposition
--> pseudotransitive
--> composition 

-> Second Normal form: table or relation must be in 1st normal form .
		       All the non-prime attributes should be fully functional dependent on      		       candidate key.
-->to find partial dependency LHS should be proper subset of CK and RHS should be a Non prime attribute

-> Third Normal Form : table or relation must be in second normal form.
			There should be no transitive dependency .
--> (to check third normal form)for each FD : LHS must be  a CK or Sk or RHS is a prime attribute .

->BCNF(boyce codd Normal Form ): LHS must be  a CK or Sk .

->Third normal form always ensure 'Dependency preserving decomposition' but not in BCNF .

-> Both third and BCNF ensures lossless decomposition .